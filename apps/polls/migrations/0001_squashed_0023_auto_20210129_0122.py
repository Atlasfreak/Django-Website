# Generated by Django 3.1.5 on 2021-01-30 04:09

import apps.polls.models
import apps.polls.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Erstellungsdatum')),
                ('start_date', models.DateTimeField(verbose_name='Startdatum')),
                ('end_date', models.DateTimeField(verbose_name='Enddatum')),
                ('title', models.CharField(max_length=150, verbose_name='Titel')),
                ('info_text', models.CharField(max_length=2048, verbose_name='Beschreibung')),
                ('token', models.CharField(default=apps.polls.models.get_default_token, max_length=32, unique=True, verbose_name='Token für url')),
                ('multiple_votes', models.BooleanField(verbose_name='Mehrmals Abstimmen')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polls', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('is_public', models.BooleanField(default=False, verbose_name='Öffentlich zugänglich')),
            ],
            options={
                'verbose_name': 'Poll',
                'verbose_name_plural': 'Polls',
            },
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose_name', models.CharField(max_length=50, verbose_name='Lesbarer Name')),
                ('enable_choices', models.BooleanField(default=True, verbose_name='Optionen verfügbar')),
                ('form_widget', models.CharField(blank=True, help_text='Vollständiger Pfad zu einem Widget z.B. "django.forms.widgets.TextInput".', max_length=255, validators=[apps.polls.validators.FormWidgetValidator()], verbose_name='Django Form Widget Klassen Pfad')),
                ('form_field', models.CharField(default='django.forms.fields.CharField', help_text='Vollständiger Pfad zu einem Field z.B. "django.forms.fields.CharField".', max_length=255, validators=[apps.polls.validators.FormFieldValidator()], verbose_name='Django Form Field Klassen Pfad')),
            ],
            options={
                'verbose_name': 'QuestionType',
                'verbose_name_plural': 'QuestionTypes',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Frage')),
                ('required', models.BooleanField(default=False, verbose_name='erforderlich')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='polls.poll', verbose_name='zugehörige Umfrage')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.questiontype', verbose_name='Fragetyp')),
                ('extra_params', models.JSONField(blank=True, null=True, verbose_name='Extra Parameter für Frage')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Option')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='polls.question', verbose_name='zugehörige Frage')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_adress', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-Adresse der Einreichung')),
                ('submission_date', models.DateTimeField(auto_now=True, verbose_name='Einsendedatum')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='polls.poll', verbose_name='Umfrage')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL, verbose_name='Nutzer')),
            ],
            options={
                'verbose_name': 'Submission',
                'verbose_name_plural': 'Submissions',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=2048, verbose_name='Antwortwert')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='polls.question', verbose_name='Frage')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='polls.submission', verbose_name='Einsendung')),
                ('choices', models.ManyToManyField(related_name='answers', to='polls.Choice', verbose_name='Antwortkey')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='QuestionTypeParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Parameter Name')),
                ('verbose_name', models.CharField(max_length=50, verbose_name='Lesbarer Name, wird dem Nutzer angezeigt')),
                ('default', models.CharField(blank=True, max_length=128, null=True, verbose_name='Standradwert')),
                ('val_type', models.CharField(choices=[('int', 'Integer'), ('str', 'String'), ('bool', 'Boolean'), ('float', 'Decimal')], max_length=128, verbose_name='Typ der Eingabewerte')),
                ('question_type', models.ManyToManyField(related_name='params', to='polls.QuestionType', verbose_name='Zugehöriger Frage Typ')),
            ],
            options={
                'verbose_name': 'QuestionTypeParam',
                'verbose_name_plural': 'QuestionTypeParams',
            },
        ),
    ]
